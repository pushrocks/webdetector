{"id":"../node_modules/@pushrocks/lik/dist/lik.limitedarray.js","dependencies":[{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/@pushrocks/lik/ts/lik.limitedarray.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/package.json","includedInParent":true,"mtime":1545395695572},{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/@pushrocks/lik/package.json","includedInParent":true,"mtime":1545395355371}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass LimitedArray {\n    constructor(limitArg) {\n        this.array = [];\n        this.arrayLimit = limitArg;\n    }\n    addOne(objectArg) {\n        this.array.unshift(objectArg);\n        if (this.array.length > this.arrayLimit) {\n            this.array.length = this.arrayLimit;\n        }\n    }\n    addMany(objectArrayArg) {\n        for (let objectArg of objectArrayArg) {\n            this.addOne(objectArg);\n        }\n    }\n    setLimit(limitArg) {\n        this.arrayLimit = limitArg;\n        if (this.array.length > this.arrayLimit) {\n            this.array.length = this.arrayLimit;\n        }\n    }\n    getAverage() {\n        if (typeof this.array[0] === 'number') {\n            let sum = 0;\n            for (let localNumber of this.array) {\n                let localNumberAny = localNumber;\n                sum = sum + localNumberAny;\n            }\n            return sum / this.array.length;\n        }\n        else {\n            return null;\n        }\n    }\n}\nexports.LimitedArray = LimitedArray;\n","map":{"version":3,"file":"lik.limitedarray.js","sourceRoot":"","sources":["../ts/lik.limitedarray.ts"],"names":[],"mappings":";;AAEA,MAAa,YAAY;IAGvB,YAAY,QAAgB;QAF5B,UAAK,GAAQ,EAAE,CAAC;QAGd,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAED,MAAM,CAAC,SAAY;QACjB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAC9B,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE;YACvC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC;SACrC;IACH,CAAC;IAED,OAAO,CAAC,cAAmB;QACzB,KAAK,IAAI,SAAS,IAAI,cAAc,EAAE;YACpC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SACxB;IACH,CAAC;IAED,QAAQ,CAAC,QAAgB;QACvB,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;QAC3B,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE;YACvC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC;SACrC;IACH,CAAC;IAED,UAAU;QACR,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;YACrC,IAAI,GAAG,GAAG,CAAC,CAAC;YACZ,KAAK,IAAI,WAAW,IAAI,IAAI,CAAC,KAAK,EAAE;gBAClC,IAAI,cAAc,GAAQ,WAAW,CAAC;gBACtC,GAAG,GAAG,GAAG,GAAG,cAAc,CAAC;aAC5B;YACD,OAAO,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;SAChC;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;CACF;AAvCD,oCAuCC","sourcesContent":["import * as plugins from './lik.plugins';\n\nexport class LimitedArray<T> {\n  array: T[] = [];\n  arrayLimit: number;\n  constructor(limitArg: number) {\n    this.arrayLimit = limitArg;\n  }\n\n  addOne(objectArg: T) {\n    this.array.unshift(objectArg);\n    if (this.array.length > this.arrayLimit) {\n      this.array.length = this.arrayLimit;\n    }\n  }\n\n  addMany(objectArrayArg: T[]) {\n    for (let objectArg of objectArrayArg) {\n      this.addOne(objectArg);\n    }\n  }\n\n  setLimit(limitArg: number) {\n    this.arrayLimit = limitArg;\n    if (this.array.length > this.arrayLimit) {\n      this.array.length = this.arrayLimit;\n    }\n  }\n\n  getAverage(): number {\n    if (typeof this.array[0] === 'number') {\n      let sum = 0;\n      for (let localNumber of this.array) {\n        let localNumberAny: any = localNumber;\n        sum = sum + localNumberAny;\n      }\n      return sum / this.array.length;\n    } else {\n      return null;\n    }\n  }\n}\n"]}},"hash":"ea38cd415ce1c47d1900a501689155ea","cacheData":{"env":{}}}