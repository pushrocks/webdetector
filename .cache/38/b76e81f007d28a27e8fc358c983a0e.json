{"id":"D7Ma","dependencies":[{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/src/internal/operators/throwIfEmpty.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/package.json","includedInParent":true,"mtime":1545395749058},{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/package.json","includedInParent":true,"mtime":1545395355370},{"name":"./tap","loc":{"line":2,"column":20},"parent":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js","resolved":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/operators/tap.js"},{"name":"../util/EmptyError","loc":{"line":3,"column":27},"parent":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js","resolved":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/util/EmptyError.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.throwIfEmpty=void 0;var t=require(\"./tap\"),e=require(\"../util/EmptyError\"),r=function(e){return void 0===e&&(e=o),(0,t.tap)({hasValue:!1,next:function(){this.hasValue=!0},complete:function(){if(!this.hasValue)throw e()}})};function o(){return new e.EmptyError}exports.throwIfEmpty=r;","map":{"mappings":[{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":0}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":13}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":20}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":35}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":43}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":56}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":57}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":64}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":68}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":76}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":94}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":96}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":100}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":102}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":110}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":1,"column":119}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":1,"column":121}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":1,"column":129}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":151}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":153}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":162}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":1,"column":165}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":65},"generated":{"line":1,"column":177}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":58},"generated":{"line":1,"column":181}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":1,"column":185}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":34,"column":19},"generated":{"line":1,"column":187}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":1,"column":191}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":1,"column":193}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":1,"column":195}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":1,"column":200}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":37,"column":10},"generated":{"line":1,"column":201}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":37,"column":11},"generated":{"line":1,"column":211}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":38,"column":14},"generated":{"line":1,"column":213}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":38,"column":14},"generated":{"line":1,"column":218}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":38,"column":14},"generated":{"line":1,"column":229}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":38,"column":14},"generated":{"line":1,"column":234}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":38,"column":29},"generated":{"line":1,"column":244}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":1,"column":247}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":1,"column":256}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":40,"column":5},"generated":{"line":1,"column":267}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":40,"column":5},"generated":{"line":1,"column":271}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":40,"column":5},"generated":{"line":1,"column":276}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":41,"column":11},"generated":{"line":1,"column":285}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":41,"column":11},"generated":{"line":1,"column":291}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":299}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":308}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":312}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":319}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":323}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":325}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":336}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":344}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":357}}],"sources":{"../../../src/internal/operators/throwIfEmpty.ts":"import { tap } from './tap';\nimport { EmptyError } from '../util/EmptyError';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/**\n * If the source observable completes without emitting a value, it will emit\n * an error. The error will be created at that time by the optional\n * `errorFactory` argument, otherwise, the error will be {@link EmptyError}.\n *\n * ![](throwIfEmpty.png)\n *\n * ## Example\n * ```javascript\n * const click$ = fromEvent(button, 'click');\n *\n * clicks$.pipe(\n *   takeUntil(timer(1000)),\n *   throwIfEmpty(\n *     () => new Error('the button was not clicked within 1 second')\n *   ),\n * )\n * .subscribe({\n *   next() { console.log('The button was clicked'); },\n *   error(err) { console.error(err); },\n * });\n * ```\n *\n * @param {Function} [errorFactory] A factory function called to produce the\n * error to be thrown when the source observable completes without emitting a\n * value.\n */\nexport const throwIfEmpty =\n  <T>(errorFactory: (() => any) = defaultErrorFactory) => tap<T>({\n    hasValue: false,\n    next() { this.hasValue = true; },\n    complete() {\n      if (!this.hasValue) {\n        throw errorFactory();\n      }\n    }\n  } as any);\n\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}\n"},"lineCount":null}},"hash":"d304bfdda924730f675ebed6b3c5502c","cacheData":{"env":{}}}