{"id":"bAWd","dependencies":[{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/operators/min.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/src/internal/operators/min.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/package.json","includedInParent":true,"mtime":1545395749058},{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/package.json","includedInParent":true,"mtime":1545395355370},{"name":"./reduce","loc":{"line":2,"column":23},"parent":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/operators/min.js","resolved":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/operators/reduce.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.min=r;var e=require(\"./reduce\");function r(r){var t=\"function\"==typeof r?function(e,t){return r(e,t)<0?e:t}:function(e,r){return e<r?e:r};return(0,e.reduce)(t)}","map":{"mappings":[{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":80}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":1,"column":82}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":1,"column":86}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":1,"column":88}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":1,"column":96}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":43,"column":2},"generated":{"line":1,"column":108}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":43,"column":34},"generated":{"line":1,"column":117}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":43,"column":34},"generated":{"line":1,"column":119}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":44,"column":4},"generated":{"line":1,"column":122}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":44,"column":4},"generated":{"line":1,"column":126}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":44,"column":16},"generated":{"line":1,"column":128}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":44,"column":8},"generated":{"line":1,"column":147}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":45,"column":6},"generated":{"line":1,"column":149}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":45,"column":7},"generated":{"line":1,"column":158}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":45,"column":10},"generated":{"line":1,"column":160}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":45,"column":16},"generated":{"line":1,"column":163}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":45,"column":16},"generated":{"line":1,"column":170}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":45,"column":25},"generated":{"line":1,"column":172}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":45,"column":28},"generated":{"line":1,"column":174}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":45,"column":30},"generated":{"line":1,"column":177}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":45,"column":30},"generated":{"line":1,"column":179}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":45,"column":30},"generated":{"line":1,"column":181}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":1,"column":184}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":46,"column":16},"generated":{"line":1,"column":193}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":46,"column":21},"generated":{"line":1,"column":195}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":46,"column":21},"generated":{"line":1,"column":198}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":46,"column":21},"generated":{"line":1,"column":205}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":46,"column":21},"generated":{"line":1,"column":207}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":46,"column":21},"generated":{"line":1,"column":209}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":46,"column":21},"generated":{"line":1,"column":211}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":214}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":221}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":223}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":225}},{"source":"../../../src/internal/operators/min.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":233}}],"sources":{"../../../src/internal/operators/min.ts":"import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * ![](min.png)\n *\n * ## Examples\n * Get the minimal value of a series of numbers\n * ```javascript\n * of(5, 4, 7, 2, 8).pipe(\n *   min(),\n * )\n * .subscribe(x => console.log(x)); // -> 2\n * ```\n *\n * Use a comparer function to get the minimal item\n * ```typescript\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * of<Person>(\n *   {age: 7, name: 'Foo'},\n *   {age: 5, name: 'Bar'},\n *   {age: 9, name: 'Beer'},\n * ).pipe(\n *   min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1),\n * )\n * .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * ```\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nexport function min<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  const min: (x: T, y: T) => T = (typeof comparer === 'function')\n    ? (x, y) => comparer(x, y) < 0 ? x : y\n    : (x, y) => x < y ? x : y;\n  return reduce(min);\n}\n"},"lineCount":null}},"hash":"b96f884aa6a800653d03966b7792d630","cacheData":{"env":{}}}