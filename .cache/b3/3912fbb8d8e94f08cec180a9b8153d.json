{"id":"LbTU","dependencies":[{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/@pushrocks/smartrx/ts/smartrx.classes.observablemap.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/package.json","includedInParent":true,"mtime":1545395749058},{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/@pushrocks/smartrx/package.json","includedInParent":true,"mtime":1545395355372},{"name":"rxjs","loc":{"line":3,"column":23},"parent":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/@pushrocks/smartrx/dist/smartrx.classes.observablemap.js","resolved":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/index.js"},{"name":"@pushrocks/lik","loc":{"line":4,"column":22},"parent":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/@pushrocks/smartrx/dist/smartrx.classes.observablemap.js","resolved":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/@pushrocks/lik/dist/index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});const e=require(\"rxjs\"),t=require(\"@pushrocks/lik\");class r{constructor(){this.ObservableEmitterBundleObjectmap=new t.Objectmap}getObservableForEmitterEvent(t,r){let s=this.ObservableEmitterBundleObjectmap.find(e=>e.emitter===t&&e.event===r);if(s)return s.observable;{let s=e.fromEvent(t,r);return this.ObservableEmitterBundleObjectmap.add({observable:s,emitter:t,event:r}),s}}}exports.Observablemap=r;","map":{"mappings":[{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":68}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":74}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":76}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":84}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":92}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":94}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":102}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":1,"column":120}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":16,"column":13},"generated":{"line":1,"column":126}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":1,"column":128}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":1,"column":142}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":1,"column":147}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":17,"column":37},"generated":{"line":1,"column":180}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":17,"column":41},"generated":{"line":1,"column":184}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":17,"column":41},"generated":{"line":1,"column":186}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":1,"column":196}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":23,"column":31},"generated":{"line":1,"column":225}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":23,"column":72},"generated":{"line":1,"column":227}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":1,"column":230}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":24,"column":8},"generated":{"line":1,"column":234}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":24,"column":25},"generated":{"line":1,"column":236}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":24,"column":30},"generated":{"line":1,"column":241}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":24,"column":63},"generated":{"line":1,"column":274}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":24,"column":68},"generated":{"line":1,"column":279}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":25,"column":13},"generated":{"line":1,"column":282}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":25,"column":23},"generated":{"line":1,"column":284}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":25,"column":35},"generated":{"line":1,"column":294}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":25,"column":49},"generated":{"line":1,"column":297}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":25,"column":59},"generated":{"line":1,"column":299}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":25,"column":69},"generated":{"line":1,"column":307}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":1,"column":310}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":27,"column":8},"generated":{"line":1,"column":313}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":1,"column":315}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":28,"column":13},"generated":{"line":1,"column":322}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":28,"column":28},"generated":{"line":1,"column":324}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":29,"column":11},"generated":{"line":1,"column":335}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":30,"column":6},"generated":{"line":1,"column":336}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":30,"column":10},"generated":{"line":1,"column":340}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":30,"column":30},"generated":{"line":1,"column":342}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":30,"column":30},"generated":{"line":1,"column":344}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":30,"column":40},"generated":{"line":1,"column":354}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":30,"column":52},"generated":{"line":1,"column":356}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":36,"column":6},"generated":{"line":1,"column":359}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":31,"column":6},"generated":{"line":1,"column":366}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":31,"column":11},"generated":{"line":1,"column":371}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":31,"column":44},"generated":{"line":1,"column":404}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":31,"column":48},"generated":{"line":1,"column":408}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":32,"column":8},"generated":{"line":1,"column":409}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":32,"column":20},"generated":{"line":1,"column":420}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":33,"column":8},"generated":{"line":1,"column":422}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":33,"column":17},"generated":{"line":1,"column":430}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":34,"column":8},"generated":{"line":1,"column":432}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":34,"column":15},"generated":{"line":1,"column":438}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":36,"column":13},"generated":{"line":1,"column":442}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":1,"column":446}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":1,"column":454}},{"source":"../ts/smartrx.classes.observablemap.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":1,"column":468}}],"sources":{"../ts/smartrx.classes.observablemap.ts":"import * as plugins from './smartrx.plugins';\nimport { Observable, fromEvent } from 'rxjs';\nimport { Objectmap, Stringmap } from '@pushrocks/lik';\n/**\n * bundles an observable with an emitter\n */\nexport interface ObservableEmitterBundle {\n  observable: plugins.rxjs.Observable<any>;\n  emitter: plugins.events.EventEmitter;\n  event: string;\n}\n\n/**\n * manages observables by making sure that only one observable is regsitered per event\n */\nexport class Observablemap {\n  ObservableEmitterBundleObjectmap = new Objectmap<ObservableEmitterBundle>();\n\n  /**\n   * creates a new observable if not yet registered for the same event.\n   * In case event has been registered before the same observable is returned.\n   */\n  getObservableForEmitterEvent(emitterArg: plugins.events.EventEmitter, eventArg: string) {\n    let existingBundle = this.ObservableEmitterBundleObjectmap.find(bundleArg => {\n      return bundleArg.emitter === emitterArg && bundleArg.event === eventArg;\n    });\n    if (existingBundle) {\n      return existingBundle.observable;\n    } else {\n      let emitterObservable = fromEvent(emitterArg, eventArg);\n      this.ObservableEmitterBundleObjectmap.add({\n        observable: emitterObservable,\n        emitter: emitterArg,\n        event: eventArg\n      });\n      return emitterObservable;\n    }\n  }\n}\n"},"lineCount":null}},"hash":"5b2c6b285ff8c32ba0e518fb803b583b","cacheData":{"env":{}}}