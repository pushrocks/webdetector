{"id":"wbS/","dependencies":[{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/Observable.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/src/internal/Observable.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/package.json","includedInParent":true,"mtime":1545395749058},{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/package.json","includedInParent":true,"mtime":1545395355370},{"name":"./util/canReportError","loc":{"line":2,"column":31},"parent":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/Observable.js","resolved":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/util/canReportError.js"},{"name":"./util/toSubscriber","loc":{"line":3,"column":29},"parent":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/Observable.js","resolved":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/util/toSubscriber.js"},{"name":"../internal/symbol/observable","loc":{"line":4,"column":48},"parent":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/Observable.js","resolved":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/symbol/observable.js"},{"name":"./util/pipe","loc":{"line":5,"column":30},"parent":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/Observable.js","resolved":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/util/pipe.js"},{"name":"./config","loc":{"line":6,"column":23},"parent":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/Observable.js","resolved":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/config.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.Observable=void 0;var r=require(\"./util/canReportError\"),e=require(\"./util/toSubscriber\"),o=require(\"../internal/symbol/observable\"),t=require(\"./util/pipe\"),n=require(\"./config\"),i=function(){function i(r){this._isScalar=!1,r&&(this._subscribe=r)}return i.prototype.lift=function(r){var e=new i;return e.source=this,e.operator=r,e},i.prototype.subscribe=function(r,o,t){var i=this.operator,s=(0,e.toSubscriber)(r,o,t);if(i?i.call(s,this.source):s.add(this.source||n.config.useDeprecatedSynchronousErrorHandling&&!s.syncErrorThrowable?this._subscribe(s):this._trySubscribe(s)),n.config.useDeprecatedSynchronousErrorHandling&&s.syncErrorThrowable&&(s.syncErrorThrowable=!1,s.syncErrorThrown))throw s.syncErrorValue;return s},i.prototype._trySubscribe=function(e){try{return this._subscribe(e)}catch(o){n.config.useDeprecatedSynchronousErrorHandling&&(e.syncErrorThrown=!0,e.syncErrorValue=o),(0,r.canReportError)(e)?e.error(o):console.warn(o)}},i.prototype.forEach=function(r,e){var o=this;return new(e=s(e))(function(e,t){var n;n=o.subscribe(function(e){try{r(e)}catch(o){t(o),n&&n.unsubscribe()}},t,e)})},i.prototype._subscribe=function(r){var e=this.source;return e&&e.subscribe(r)},i.prototype[o.observable]=function(){return this},i.prototype.pipe=function(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];return 0===r.length?this:(0,t.pipeFromArray)(r)(this)},i.prototype.toPromise=function(r){var e=this;return new(r=s(r))(function(r,o){var t;e.subscribe(function(r){return t=r},function(r){return o(r)},function(){return r(t)})})},i.create=function(r){return new i(r)},i}();function s(r){if(r||(r=n.config.Promise||Promise),!r)throw new Error(\"no Promise impl found\");return r}exports.Observable=i;","map":{"mappings":[{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":367,"column":1},"generated":{"line":1,"column":0}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":367,"column":1},"generated":{"line":1,"column":13}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":367,"column":1},"generated":{"line":1,"column":20}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":367,"column":1},"generated":{"line":1,"column":35}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":367,"column":1},"generated":{"line":1,"column":43}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":367,"column":1},"generated":{"line":1,"column":56}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":367,"column":1},"generated":{"line":1,"column":57}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":367,"column":1},"generated":{"line":1,"column":64}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":367,"column":1},"generated":{"line":1,"column":68}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":367,"column":1},"generated":{"line":1,"column":76}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":367,"column":1},"generated":{"line":1,"column":92}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":94}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":98}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":100}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":108}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":1,"column":133}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":1,"column":135}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":1,"column":143}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":166}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":168}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":176}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":1,"column":209}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":1,"column":211}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":1,"column":219}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":234}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":236}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":244}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":37,"column":2},"generated":{"line":1,"column":256}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":37,"column":14},"generated":{"line":1,"column":258}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":22,"column":9},"generated":{"line":1,"column":269}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":22,"column":9},"generated":{"line":1,"column":278}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":22,"column":18},"generated":{"line":1,"column":280}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":38,"column":8},"generated":{"line":1,"column":283}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":38,"column":8},"generated":{"line":1,"column":288}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":38,"column":19},"generated":{"line":1,"column":299}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":1,"column":301}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":40,"column":5},"generated":{"line":1,"column":305}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":40,"column":5},"generated":{"line":1,"column":310}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":40,"column":5},"generated":{"line":1,"column":321}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":348,"column":1},"generated":{"line":1,"column":324}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":66,"column":10},"generated":{"line":1,"column":331}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":66,"column":10},"generated":{"line":1,"column":333}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":66,"column":23},"generated":{"line":1,"column":343}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":66,"column":27},"generated":{"line":1,"column":348}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":66,"column":43},"generated":{"line":1,"column":357}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":67,"column":4},"generated":{"line":1,"column":360}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":67,"column":4},"generated":{"line":1,"column":364}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":67,"column":21},"generated":{"line":1,"column":366}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":67,"column":24},"generated":{"line":1,"column":370}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":70,"column":3},"generated":{"line":1,"column":372}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":68,"column":4},"generated":{"line":1,"column":379}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":68,"column":15},"generated":{"line":1,"column":381}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":68,"column":23},"generated":{"line":1,"column":388}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":69,"column":4},"generated":{"line":1,"column":393}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":69,"column":11},"generated":{"line":1,"column":395}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":69,"column":22},"generated":{"line":1,"column":404}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":70,"column":3},"generated":{"line":1,"column":406}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":196,"column":12},"generated":{"line":1,"column":409}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":196,"column":12},"generated":{"line":1,"column":411}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":196,"column":12},"generated":{"line":1,"column":421}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":196,"column":30},"generated":{"line":1,"column":431}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":196,"column":30},"generated":{"line":1,"column":440}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":196,"column":30},"generated":{"line":1,"column":442}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":196,"column":30},"generated":{"line":1,"column":444}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":197,"column":10},"generated":{"line":1,"column":447}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":197,"column":10},"generated":{"line":1,"column":451}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":197,"column":17},"generated":{"line":1,"column":453}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":197,"column":17},"generated":{"line":1,"column":458}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":199,"column":8},"generated":{"line":1,"column":467}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":199,"column":8},"generated":{"line":1,"column":470}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":199,"column":18},"generated":{"line":1,"column":472}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":199,"column":18},"generated":{"line":1,"column":474}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":199,"column":18},"generated":{"line":1,"column":488}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":199,"column":18},"generated":{"line":1,"column":490}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":199,"column":18},"generated":{"line":1,"column":492}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":210,"column":6},"generated":{"line":1,"column":495}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":200,"column":6},"generated":{"line":1,"column":498}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":201,"column":5},"generated":{"line":1,"column":500}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":201,"column":5},"generated":{"line":1,"column":502}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":201,"column":5},"generated":{"line":1,"column":507}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":201,"column":5},"generated":{"line":1,"column":509}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":201,"column":5},"generated":{"line":1,"column":514}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":204,"column":8},"generated":{"line":1,"column":522}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":204,"column":8},"generated":{"line":1,"column":524}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":204,"column":13},"generated":{"line":1,"column":528}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":204,"column":13},"generated":{"line":1,"column":533}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":204,"column":29},"generated":{"line":1,"column":541}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":204,"column":31},"generated":{"line":1,"column":543}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":204,"column":31},"generated":{"line":1,"column":550}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":204,"column":31},"generated":{"line":1,"column":590}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":204,"column":31},"generated":{"line":1,"column":592}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":205,"column":8},"generated":{"line":1,"column":611}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":205,"column":13},"generated":{"line":1,"column":616}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":205,"column":13},"generated":{"line":1,"column":627}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":207,"column":5},"generated":{"line":1,"column":630}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":207,"column":5},"generated":{"line":1,"column":635}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":207,"column":5},"generated":{"line":1,"column":649}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":210,"column":6},"generated":{"line":1,"column":653}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":210,"column":10},"generated":{"line":1,"column":655}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":210,"column":10},"generated":{"line":1,"column":662}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":211,"column":8},"generated":{"line":1,"column":701}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":211,"column":13},"generated":{"line":1,"column":703}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":212,"column":8},"generated":{"line":1,"column":724}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":212,"column":12},"generated":{"line":1,"column":726}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":212,"column":34},"generated":{"line":1,"column":746}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":213,"column":10},"generated":{"line":1,"column":748}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":213,"column":10},"generated":{"line":1,"column":750}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":214,"column":9},"generated":{"line":1,"column":767}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":214,"column":9},"generated":{"line":1,"column":773}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":214,"column":9},"generated":{"line":1,"column":775}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":219,"column":3},"generated":{"line":1,"column":790}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":219,"column":3},"generated":{"line":1,"column":797}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":223,"column":8},"generated":{"line":1,"column":800}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":223,"column":8},"generated":{"line":1,"column":802}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":223,"column":8},"generated":{"line":1,"column":812}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":223,"column":8},"generated":{"line":1,"column":826}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":223,"column":8},"generated":{"line":1,"column":835}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":224,"column":6},"generated":{"line":1,"column":838}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":225,"column":5},"generated":{"line":1,"column":842}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":225,"column":5},"generated":{"line":1,"column":849}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":225,"column":5},"generated":{"line":1,"column":854}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":225,"column":5},"generated":{"line":1,"column":865}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":226,"column":6},"generated":{"line":1,"column":868}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":226,"column":6},"generated":{"line":1,"column":874}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":227,"column":8},"generated":{"line":1,"column":877}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":227,"column":13},"generated":{"line":1,"column":879}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":227,"column":13},"generated":{"line":1,"column":886}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":228,"column":8},"generated":{"line":1,"column":926}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":228,"column":13},"generated":{"line":1,"column":928}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":228,"column":30},"generated":{"line":1,"column":945}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":229,"column":7},"generated":{"line":1,"column":947}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":229,"column":7},"generated":{"line":1,"column":949}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":229,"column":7},"generated":{"line":1,"column":964}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":231,"column":8},"generated":{"line":1,"column":968}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":231,"column":23},"generated":{"line":1,"column":970}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":231,"column":23},"generated":{"line":1,"column":972}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":231,"column":23},"generated":{"line":1,"column":988}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":232,"column":7},"generated":{"line":1,"column":991}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":232,"column":7},"generated":{"line":1,"column":993}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":232,"column":7},"generated":{"line":1,"column":999}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":234,"column":7},"generated":{"line":1,"column":1002}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":234,"column":7},"generated":{"line":1,"column":1010}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":234,"column":7},"generated":{"line":1,"column":1015}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":245,"column":2},"generated":{"line":1,"column":1020}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":245,"column":2},"generated":{"line":1,"column":1022}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":263,"column":3},"generated":{"line":1,"column":1032}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":263,"column":3},"generated":{"line":1,"column":1040}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":263,"column":3},"generated":{"line":1,"column":1049}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":263,"column":3},"generated":{"line":1,"column":1051}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":246,"column":4},"generated":{"line":1,"column":1054}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":246,"column":4},"generated":{"line":1,"column":1058}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":246,"column":15},"generated":{"line":1,"column":1060}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":251,"column":6},"generated":{"line":1,"column":1065}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":251,"column":6},"generated":{"line":1,"column":1072}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":248,"column":4},"generated":{"line":1,"column":1076}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":248,"column":15},"generated":{"line":1,"column":1078}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":248,"column":33},"generated":{"line":1,"column":1080}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":251,"column":37},"generated":{"line":1,"column":1084}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":251,"column":37},"generated":{"line":1,"column":1093}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":251,"column":37},"generated":{"line":1,"column":1095}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":252,"column":6},"generated":{"line":1,"column":1098}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":252,"column":6},"generated":{"line":1,"column":1102}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":253,"column":12},"generated":{"line":1,"column":1104}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":253,"column":12},"generated":{"line":1,"column":1106}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":253,"column":12},"generated":{"line":1,"column":1108}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":253,"column":12},"generated":{"line":1,"column":1118}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":253,"column":12},"generated":{"line":1,"column":1127}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":254,"column":10},"generated":{"line":1,"column":1130}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":255,"column":9},"generated":{"line":1,"column":1134}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":255,"column":9},"generated":{"line":1,"column":1136}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":256,"column":10},"generated":{"line":1,"column":1139}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":256,"column":10},"generated":{"line":1,"column":1145}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":257,"column":10},"generated":{"line":1,"column":1148}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":257,"column":14},"generated":{"line":1,"column":1150}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":258,"column":12},"generated":{"line":1,"column":1153}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":259,"column":11},"generated":{"line":1,"column":1156}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":259,"column":11},"generated":{"line":1,"column":1158}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":262,"column":24},"generated":{"line":1,"column":1174}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":262,"column":24},"generated":{"line":1,"column":1176}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":267,"column":12},"generated":{"line":1,"column":1182}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":267,"column":12},"generated":{"line":1,"column":1184}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":267,"column":12},"generated":{"line":1,"column":1194}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":267,"column":28},"generated":{"line":1,"column":1205}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":267,"column":28},"generated":{"line":1,"column":1214}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":268,"column":4},"generated":{"line":1,"column":1217}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":268,"column":4},"generated":{"line":1,"column":1221}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":268,"column":17},"generated":{"line":1,"column":1223}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":268,"column":21},"generated":{"line":1,"column":1228}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":269,"column":3},"generated":{"line":1,"column":1235}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":269,"column":3},"generated":{"line":1,"column":1242}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":269,"column":3},"generated":{"line":1,"column":1245}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":269,"column":3},"generated":{"line":1,"column":1247}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":269,"column":3},"generated":{"line":1,"column":1257}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":290,"column":4},"generated":{"line":1,"column":1261}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":290,"column":11},"generated":{"line":1,"column":1263}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":290,"column":16},"generated":{"line":1,"column":1273}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":290,"column":16},"generated":{"line":1,"column":1275}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":290,"column":16},"generated":{"line":1,"column":1287}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":291,"column":3},"generated":{"line":1,"column":1298}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":291,"column":3},"generated":{"line":1,"column":1305}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":326,"column":7},"generated":{"line":1,"column":1311}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":326,"column":7},"generated":{"line":1,"column":1313}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":326,"column":7},"generated":{"line":1,"column":1323}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":326,"column":50},"generated":{"line":1,"column":1328}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":326,"column":7},"generated":{"line":1,"column":1339}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":326,"column":7},"generated":{"line":1,"column":1343}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":326,"column":7},"generated":{"line":1,"column":1347}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":326,"column":7},"generated":{"line":1,"column":1349}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":326,"column":7},"generated":{"line":1,"column":1352}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":326,"column":7},"generated":{"line":1,"column":1354}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":326,"column":7},"generated":{"line":1,"column":1356}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":326,"column":7},"generated":{"line":1,"column":1358}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":326,"column":7},"generated":{"line":1,"column":1368}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":326,"column":50},"generated":{"line":1,"column":1375}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":367,"column":1},"generated":{"line":1,"column":1379}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":367,"column":1},"generated":{"line":1,"column":1381}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":367,"column":1},"generated":{"line":1,"column":1384}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":367,"column":1},"generated":{"line":1,"column":1394}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":328,"column":6},"generated":{"line":1,"column":1397}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":328,"column":25},"generated":{"line":1,"column":1404}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":328,"column":6},"generated":{"line":1,"column":1408}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":328,"column":24},"generated":{"line":1,"column":1410}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":329,"column":5},"generated":{"line":1,"column":1417}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":332,"column":3},"generated":{"line":1,"column":1423}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":332,"column":3},"generated":{"line":1,"column":1425}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":332,"column":3},"generated":{"line":1,"column":1427}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":332,"column":3},"generated":{"line":1,"column":1442}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":332,"column":3},"generated":{"line":1,"column":1444}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":332,"column":3},"generated":{"line":1,"column":1445}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":340,"column":2},"generated":{"line":1,"column":1452}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":340,"column":2},"generated":{"line":1,"column":1454}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":347,"column":3},"generated":{"line":1,"column":1464}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":347,"column":3},"generated":{"line":1,"column":1474}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":347,"column":3},"generated":{"line":1,"column":1483}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":341,"column":4},"generated":{"line":1,"column":1486}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":341,"column":4},"generated":{"line":1,"column":1490}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":341,"column":15},"generated":{"line":1,"column":1492}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":344,"column":6},"generated":{"line":1,"column":1497}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":344,"column":6},"generated":{"line":1,"column":1504}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":343,"column":4},"generated":{"line":1,"column":1508}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":343,"column":15},"generated":{"line":1,"column":1510}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":343,"column":27},"generated":{"line":1,"column":1512}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":344,"column":21},"generated":{"line":1,"column":1516}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":344,"column":21},"generated":{"line":1,"column":1525}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":344,"column":21},"generated":{"line":1,"column":1527}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":345,"column":6},"generated":{"line":1,"column":1530}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":345,"column":6},"generated":{"line":1,"column":1534}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":346,"column":21},"generated":{"line":1,"column":1536}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":346,"column":21},"generated":{"line":1,"column":1538}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":346,"column":21},"generated":{"line":1,"column":1548}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":346,"column":21},"generated":{"line":1,"column":1557}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":346,"column":21},"generated":{"line":1,"column":1560}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":346,"column":21},"generated":{"line":1,"column":1567}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":346,"column":21},"generated":{"line":1,"column":1569}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":346,"column":21},"generated":{"line":1,"column":1572}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":346,"column":21},"generated":{"line":1,"column":1581}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":346,"column":21},"generated":{"line":1,"column":1584}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":346,"column":21},"generated":{"line":1,"column":1591}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":346,"column":21},"generated":{"line":1,"column":1593}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":346,"column":21},"generated":{"line":1,"column":1597}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":346,"column":21},"generated":{"line":1,"column":1608}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":346,"column":21},"generated":{"line":1,"column":1615}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":346,"column":21},"generated":{"line":1,"column":1617}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":55,"column":4},"generated":{"line":1,"column":1625}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":55,"column":11},"generated":{"line":1,"column":1627}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":55,"column":15},"generated":{"line":1,"column":1634}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":55,"column":29},"generated":{"line":1,"column":1643}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":56,"column":3},"generated":{"line":1,"column":1646}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":56,"column":3},"generated":{"line":1,"column":1653}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":56,"column":3},"generated":{"line":1,"column":1657}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":56,"column":3},"generated":{"line":1,"column":1659}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":348,"column":1},"generated":{"line":1,"column":1663}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":37,"column":14},"generated":{"line":1,"column":1665}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":358,"column":7},"generated":{"line":1,"column":1668}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":358,"column":7},"generated":{"line":1,"column":1677}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":358,"column":20},"generated":{"line":1,"column":1679}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":363,"column":4},"generated":{"line":1,"column":1682}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":359,"column":4},"generated":{"line":1,"column":1685}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":360,"column":3},"generated":{"line":1,"column":1689}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":360,"column":3},"generated":{"line":1,"column":1691}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":360,"column":3},"generated":{"line":1,"column":1693}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":360,"column":3},"generated":{"line":1,"column":1700}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":360,"column":3},"generated":{"line":1,"column":1709}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":363,"column":4},"generated":{"line":1,"column":1719}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":364,"column":3},"generated":{"line":1,"column":1721}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":364,"column":3},"generated":{"line":1,"column":1727}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":364,"column":3},"generated":{"line":1,"column":1731}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":364,"column":3},"generated":{"line":1,"column":1737}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":367,"column":1},"generated":{"line":1,"column":1762}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":367,"column":1},"generated":{"line":1,"column":1769}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":367,"column":1},"generated":{"line":1,"column":1771}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":367,"column":1},"generated":{"line":1,"column":1779}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":367,"column":1},"generated":{"line":1,"column":1790}}],"sources":{"../../src/internal/Observable.ts":"import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, PartialObserver, Subscribable } from './types';\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from '../internal/symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```javascript\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() { // We actually could just remove this method,\n   *   },        // since we do not really care about errors right now.\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   * .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```javascript\n   * let sum = 0;\n   *\n   * Rx.Observable.of(1, 2, 3)\n   * .subscribe(\n   *   function(value) {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   function() {\n   *     console.log('Sum equals: ' + sum);\n   *   }\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```javascript\n   * const subscription = Rx.Observable.interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => console.log('completed!') // Will not be called, even\n   * );                                // when cancelling subscription\n   *\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this.source);\n    } else {\n      sink.add(\n        this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n        this._subscribe(sink) :\n        this._trySubscribe(sink)\n      );\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a RefernceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>, ...operations: OperatorFunction<any, any>[]): Observable<{}>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```javascript\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * Rx.Observable.interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n"},"lineCount":null}},"hash":"03d77f74f32c9191b84e43b1257095fe","cacheData":{"env":{}}}