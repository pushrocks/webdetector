{"id":"DQig","dependencies":[{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/observable/merge.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/src/internal/observable/merge.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/package.json","includedInParent":true,"mtime":1545395749058},{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/package.json","includedInParent":true,"mtime":1545395355370},{"name":"../Observable","loc":{"line":2,"column":27},"parent":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/observable/merge.js","resolved":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/Observable.js"},{"name":"../util/isScheduler","loc":{"line":3,"column":28},"parent":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/observable/merge.js","resolved":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/util/isScheduler.js"},{"name":"../operators/mergeAll","loc":{"line":4,"column":25},"parent":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/observable/merge.js","resolved":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/operators/mergeAll.js"},{"name":"./fromArray","loc":{"line":5,"column":26},"parent":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/observable/merge.js","resolved":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/observable/fromArray.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.merge=u;var e=require(\"../Observable\"),r=require(\"../util/isScheduler\"),l=require(\"../operators/mergeAll\"),t=require(\"./fromArray\");function u(){for(var u=[],o=0;o<arguments.length;o++)u[o]=arguments[o];var n=Number.POSITIVE_INFINITY,p=null,i=u[u.length-1];return(0,r.isScheduler)(i)?(p=u.pop(),u.length>1&&\"number\"==typeof u[u.length-1]&&(n=u.pop())):\"number\"==typeof i&&(n=u.pop()),null===p&&1===u.length&&u[0]instanceof e.Observable?u[0]:(0,l.mergeAll)(n)((0,t.fromArray)(u,p))}","map":{"mappings":[{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":82}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":84}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":88}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":90}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":98}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":115}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":117}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":125}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":148}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":150}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":158}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":88,"column":0},"generated":{"line":1,"column":183}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":88,"column":0},"generated":{"line":1,"column":185}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":88,"column":0},"generated":{"line":1,"column":193}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":88,"column":28},"generated":{"line":1,"column":208}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":88,"column":28},"generated":{"line":1,"column":217}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":88,"column":28},"generated":{"line":1,"column":221}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":88,"column":96},"generated":{"line":1,"column":225}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":88,"column":96},"generated":{"line":1,"column":229}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":88,"column":28},"generated":{"line":1,"column":231}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":88,"column":28},"generated":{"line":1,"column":234}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":88,"column":28},"generated":{"line":1,"column":236}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":88,"column":28},"generated":{"line":1,"column":238}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":88,"column":28},"generated":{"line":1,"column":240}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":88,"column":28},"generated":{"line":1,"column":250}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":88,"column":96},"generated":{"line":1,"column":257}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":261}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":263}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":266}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":276}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":5},"generated":{"line":1,"column":279}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":5},"generated":{"line":1,"column":283}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":32},"generated":{"line":1,"column":285}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":90,"column":37},"generated":{"line":1,"column":292}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":91,"column":6},"generated":{"line":1,"column":310}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":91,"column":18},"generated":{"line":1,"column":312}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":92,"column":6},"generated":{"line":1,"column":317}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":92,"column":6},"generated":{"line":1,"column":319}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":92,"column":25},"generated":{"line":1,"column":321}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":92,"column":25},"generated":{"line":1,"column":323}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":92,"column":25},"generated":{"line":1,"column":330}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":102,"column":4},"generated":{"line":1,"column":333}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":93,"column":4},"generated":{"line":1,"column":340}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":93,"column":31},"generated":{"line":1,"column":342}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":93,"column":31},"generated":{"line":1,"column":344}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":93,"column":31},"generated":{"line":1,"column":357}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":94,"column":4},"generated":{"line":1,"column":361}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":94,"column":8},"generated":{"line":1,"column":363}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":94,"column":26},"generated":{"line":1,"column":365}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":95,"column":6},"generated":{"line":1,"column":371}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":95,"column":16},"generated":{"line":1,"column":373}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":95,"column":27},"generated":{"line":1,"column":380}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":95,"column":45},"generated":{"line":1,"column":383}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":95,"column":45},"generated":{"line":1,"column":400}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":95,"column":45},"generated":{"line":1,"column":402}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":95,"column":45},"generated":{"line":1,"column":404}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":95,"column":45},"generated":{"line":1,"column":411}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":96,"column":5},"generated":{"line":1,"column":416}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":96,"column":5},"generated":{"line":1,"column":418}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":96,"column":5},"generated":{"line":1,"column":420}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":98,"column":25},"generated":{"line":1,"column":428}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":98,"column":14},"generated":{"line":1,"column":445}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":99,"column":3},"generated":{"line":1,"column":449}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":99,"column":3},"generated":{"line":1,"column":451}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":99,"column":3},"generated":{"line":1,"column":453}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":102,"column":26},"generated":{"line":1,"column":460}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":102,"column":4},"generated":{"line":1,"column":467}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":102,"column":41},"generated":{"line":1,"column":470}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":102,"column":41},"generated":{"line":1,"column":474}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":102,"column":41},"generated":{"line":1,"column":476}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":102,"column":41},"generated":{"line":1,"column":484}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":102,"column":41},"generated":{"line":1,"column":486}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":102,"column":41},"generated":{"line":1,"column":499}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":102,"column":41},"generated":{"line":1,"column":501}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":103,"column":3},"generated":{"line":1,"column":512}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":103,"column":3},"generated":{"line":1,"column":514}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":518}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":520}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":522}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":532}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":534}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":536}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":538}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":540}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":551}},{"source":"../../../src/internal/observable/merge.ts","name":null,"original":{"line":106,"column":1},"generated":{"line":1,"column":553}}],"sources":{"../../../src/internal/observable/merge.ts":"import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike} from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\n\n/* tslint:disable:max-line-length */\nexport function merge<T>(v1: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number, scheduler?: SchedulerLike): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: SchedulerLike): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | SchedulerLike | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | SchedulerLike | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * ### Merge together two Observables: 1s interval and clicks\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * ### Merge together 3 Observables, but only 2 run concurrently\n * ```javascript\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: SchedulerLike = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <SchedulerLike>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll<R>(concurrent)(fromArray<any>(observables, scheduler));\n}\n"},"lineCount":null}},"hash":"0ccda744aeeb53677b5371f9aa70ffc6","cacheData":{"env":{}}}