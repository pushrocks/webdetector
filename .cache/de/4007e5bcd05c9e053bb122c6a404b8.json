{"id":"tjV3","dependencies":[{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/_esm5/internal/symbol/observable.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/src/internal/symbol/observable.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/package.json","includedInParent":true,"mtime":1545395749058},{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/rxjs/package.json","includedInParent":true,"mtime":1545395355370}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.observable=void 0;var e=\"function\"==typeof Symbol&&Symbol.observable||\"@@observable\";exports.observable=e;","map":{"mappings":[{"source":"../../../src/internal/symbol/observable.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../src/internal/symbol/observable.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":13}},{"source":"../../../src/internal/symbol/observable.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":20}},{"source":"../../../src/internal/symbol/observable.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":35}},{"source":"../../../src/internal/symbol/observable.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":43}},{"source":"../../../src/internal/symbol/observable.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":56}},{"source":"../../../src/internal/symbol/observable.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":57}},{"source":"../../../src/internal/symbol/observable.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":64}},{"source":"../../../src/internal/symbol/observable.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":68}},{"source":"../../../src/internal/symbol/observable.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":76}},{"source":"../../../src/internal/symbol/observable.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":92}},{"source":"../../../src/internal/symbol/observable.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":94}},{"source":"../../../src/internal/symbol/observable.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":98}},{"source":"../../../src/internal/symbol/observable.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":100}},{"source":"../../../src/internal/symbol/observable.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":119}},{"source":"../../../src/internal/symbol/observable.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":127}},{"source":"../../../src/internal/symbol/observable.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":134}},{"source":"../../../src/internal/symbol/observable.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":146}},{"source":"../../../src/internal/symbol/observable.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":161}},{"source":"../../../src/internal/symbol/observable.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":169}},{"source":"../../../src/internal/symbol/observable.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":180}}],"sources":{"../../../src/internal/symbol/observable.ts":"import { root } from '../util/root';\n\n/** Symbol.observable addition */\n/* Note: This will add Symbol.observable globally for all TypeScript users,\n  however, we are no longer polyfilling Symbol.observable */\ndeclare global {\n  interface SymbolConstructor {\n    readonly observable: symbol;\n  }\n}\n\n/** Symbol.observable or a string \"@@observable\". Used for interop */\nexport const observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';\n"},"lineCount":null}},"hash":"65da65155bf35f0c85eea6c3c8e8c60a","cacheData":{"env":{}}}