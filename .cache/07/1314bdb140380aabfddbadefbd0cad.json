{"id":"../node_modules/@pushrocks/smartevent/dist/index.js","dependencies":[{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/@pushrocks/smartevent/ts/index.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/package.json","includedInParent":true,"mtime":1545395695572},{"name":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/@pushrocks/smartevent/package.json","includedInParent":true,"mtime":1545395354765},{"name":"./smartevent.plugins","loc":{"line":11,"column":24},"parent":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/@pushrocks/smartevent/dist/index.js","resolved":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/@pushrocks/smartevent/dist/smartevent.plugins.js"},{"name":"events","loc":{"line":12,"column":25},"parent":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/@pushrocks/smartevent/dist/index.js","resolved":"/Users/philkunz/gitlab/pushrocks_meta/webdetector/node_modules/events/events.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst plugins = require(\"./smartevent.plugins\");\nconst events_1 = require(\"events\");\nexports.EventEmitter = events_1.EventEmitter;\nexports.once = (eventEmitter, eventName) => __awaiter(this, void 0, void 0, function* () {\n    const done = plugins.smartpromise.defer();\n    eventEmitter.once(eventName, eventPayload => {\n        done.resolve(eventPayload);\n    });\n    return yield done.promise;\n});\n","map":{"version":3,"file":"index.js","sourceRoot":"","sources":["../ts/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,gDAAgD;AAChD,mCAAsC;AAE7B,uBAFA,qBAAY,CAEA;AAER,QAAA,IAAI,GAAG,CAAU,YAA0B,EAAE,SAAiB,EAAc,EAAE;IACzF,MAAM,IAAI,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,EAAK,CAAC;IAC7C,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,YAAY,CAAC,EAAE;QAC1C,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IACH,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC;AAC5B,CAAC,CAAA,CAAC","sourcesContent":["import * as plugins from './smartevent.plugins';\nimport { EventEmitter } from 'events';\n\nexport { EventEmitter };\n\nexport const once = async <T>(eventEmitter: EventEmitter, eventName: string): Promise<T> => {\n  const done = plugins.smartpromise.defer<T>();\n  eventEmitter.once(eventName, eventPayload => {\n    done.resolve(eventPayload);\n  });\n  return await done.promise;\n};\n"]}},"hash":"8b66c65c3e8aac652032ecf26ff9d7c4","cacheData":{"env":{}}}